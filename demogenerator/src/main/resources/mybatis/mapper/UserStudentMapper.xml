<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.demogenerator.dao.UserStudentMapper" >
  <resultMap id="BaseResultMap" type="com.demo.demogenerator.model.UserStudent" >
    <constructor >
      <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="student_number" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_major" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_class" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_phone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="student_count_enable" jdbcType="TINYINT" javaType="java.lang.Byte" />
      <arg column="student_current_game" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="student_teacher_id" jdbcType="BIGINT" javaType="java.lang.Long" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, student_number, student_name, student_password, student_major, student_class, 
    student_email, student_phone, student_count_enable, student_current_game, student_teacher_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.demo.demogenerator.model.UserStudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_student
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_student
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.demo.demogenerator.model.UserStudentExample" >
    delete from user_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.demo.demogenerator.model.UserStudent" >
    insert into user_student (id, student_number, student_name, 
      student_password, student_major, student_class, 
      student_email, student_phone, student_count_enable, 
      student_current_game, student_teacher_id)
    values (#{id,jdbcType=BIGINT}, #{studentNumber,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}, 
      #{studentPassword,jdbcType=VARCHAR}, #{studentMajor,jdbcType=VARCHAR}, #{studentClass,jdbcType=VARCHAR}, 
      #{studentEmail,jdbcType=VARCHAR}, #{studentPhone,jdbcType=VARCHAR}, #{studentCountEnable,jdbcType=TINYINT}, 
      #{studentCurrentGame,jdbcType=BIGINT}, #{studentTeacherId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.demogenerator.model.UserStudent" >
    insert into user_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="studentNumber != null" >
        student_number,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="studentPassword != null" >
        student_password,
      </if>
      <if test="studentMajor != null" >
        student_major,
      </if>
      <if test="studentClass != null" >
        student_class,
      </if>
      <if test="studentEmail != null" >
        student_email,
      </if>
      <if test="studentPhone != null" >
        student_phone,
      </if>
      <if test="studentCountEnable != null" >
        student_count_enable,
      </if>
      <if test="studentCurrentGame != null" >
        student_current_game,
      </if>
      <if test="studentTeacherId != null" >
        student_teacher_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="studentNumber != null" >
        #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null" >
        #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="studentMajor != null" >
        #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null" >
        #{studentClass,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null" >
        #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="studentPhone != null" >
        #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentCountEnable != null" >
        #{studentCountEnable,jdbcType=TINYINT},
      </if>
      <if test="studentCurrentGame != null" >
        #{studentCurrentGame,jdbcType=BIGINT},
      </if>
      <if test="studentTeacherId != null" >
        #{studentTeacherId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.demo.demogenerator.model.UserStudentExample" resultType="java.lang.Integer" >
    select count(*) from user_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_student
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.studentNumber != null" >
        student_number = #{record.studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.studentName != null" >
        student_name = #{record.studentName,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPassword != null" >
        student_password = #{record.studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.studentMajor != null" >
        student_major = #{record.studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="record.studentClass != null" >
        student_class = #{record.studentClass,jdbcType=VARCHAR},
      </if>
      <if test="record.studentEmail != null" >
        student_email = #{record.studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.studentPhone != null" >
        student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.studentCountEnable != null" >
        student_count_enable = #{record.studentCountEnable,jdbcType=TINYINT},
      </if>
      <if test="record.studentCurrentGame != null" >
        student_current_game = #{record.studentCurrentGame,jdbcType=BIGINT},
      </if>
      <if test="record.studentTeacherId != null" >
        student_teacher_id = #{record.studentTeacherId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_student
    set id = #{record.id,jdbcType=BIGINT},
      student_number = #{record.studentNumber,jdbcType=VARCHAR},
      student_name = #{record.studentName,jdbcType=VARCHAR},
      student_password = #{record.studentPassword,jdbcType=VARCHAR},
      student_major = #{record.studentMajor,jdbcType=VARCHAR},
      student_class = #{record.studentClass,jdbcType=VARCHAR},
      student_email = #{record.studentEmail,jdbcType=VARCHAR},
      student_phone = #{record.studentPhone,jdbcType=VARCHAR},
      student_count_enable = #{record.studentCountEnable,jdbcType=TINYINT},
      student_current_game = #{record.studentCurrentGame,jdbcType=BIGINT},
      student_teacher_id = #{record.studentTeacherId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.demo.demogenerator.model.UserStudent" >
    update user_student
    <set >
      <if test="studentNumber != null" >
        student_number = #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null" >
        student_password = #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="studentMajor != null" >
        student_major = #{studentMajor,jdbcType=VARCHAR},
      </if>
      <if test="studentClass != null" >
        student_class = #{studentClass,jdbcType=VARCHAR},
      </if>
      <if test="studentEmail != null" >
        student_email = #{studentEmail,jdbcType=VARCHAR},
      </if>
      <if test="studentPhone != null" >
        student_phone = #{studentPhone,jdbcType=VARCHAR},
      </if>
      <if test="studentCountEnable != null" >
        student_count_enable = #{studentCountEnable,jdbcType=TINYINT},
      </if>
      <if test="studentCurrentGame != null" >
        student_current_game = #{studentCurrentGame,jdbcType=BIGINT},
      </if>
      <if test="studentTeacherId != null" >
        student_teacher_id = #{studentTeacherId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.demo.demogenerator.model.UserStudent" >
    update user_student
    set student_number = #{studentNumber,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR},
      student_password = #{studentPassword,jdbcType=VARCHAR},
      student_major = #{studentMajor,jdbcType=VARCHAR},
      student_class = #{studentClass,jdbcType=VARCHAR},
      student_email = #{studentEmail,jdbcType=VARCHAR},
      student_phone = #{studentPhone,jdbcType=VARCHAR},
      student_count_enable = #{studentCountEnable,jdbcType=TINYINT},
      student_current_game = #{studentCurrentGame,jdbcType=BIGINT},
      student_teacher_id = #{studentTeacherId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>